(function(window){

 	'use strict';

    var getInstance = function() {
		console.log('Observer initializing ...');

        var instance = {};
		var subscriber = [];

        instance.subscribe = function(who, what, cb) {
			if (!subscriber[what]) {
				subscriber[what] = [];
			}

			for(var i = 0; i < subscriber[what].length; i++) {
				var o = subscriber[what][i];
				if (o.item === who && o.callback === cb) {
					return;
				}
			}

			subscriber[what].push({item: who, callback: cb });
		};

		instance.unsubscribe = function(who, what) {
			if (!subscriber[what]) {
				return;
			}

			for(var i = 0; i < subscriber[what].length; i++) {
				var o = subscriber[what][i];
				if (o.item === who) {
					subscriber[what].splice(i, 1);
					return;
				}
			}
		};

		instance.send = function(who, what, data) {
			if (!subscriber[what]) {
				return;
			}

			for(var i = 0; i < subscriber[what].length; i++) {
				var o = subscriber[what][i];
				o.callback(who, data);
			}
		};

		console.log('Observer initialized');
        return instance;
    };

 	if (typeof(Observer) === 'undefined') {
        window.Observer = getInstance();
    } else {
        console.log('Observer already defined.');
    }

})(window);